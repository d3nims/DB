USE scott;


SELECT *
FROM emp e1
RIGHT JOIN emp e2
ON e1.mgr = e2.empno;

#서브
SELECT *, IF(comm = 0, NULL, comm) comm2 FROM emp; #물리테이블이 아닌 가상테이블. 뷰.

SELECT deptno, COUNT(*), COUNT(comm) FROM emp GROUP BY deptno;

SELECT deptno, COUNT(*), COUNT(comm2)
FROM (SELECT *, IF(comm = 0, NULL, comm) comm2 FROM emp) e
GROUP BY deptno;

#위와 같은 조인을 외부OUTER조인이라 한다. A LEFT JOIN B는 조인 조건에 만족하지 못하더라도 왼쪽 테이블 A의 행을 나타내고 싶을 때 사용한다.
#이름,부서명을 조회하시오.단, 사원테이블에 부서번호가 40에 속한 사원이 없지만 부서번호 40인 부서명도 출력되도록 하시오.
SELECT * FROM emp;

SELECT * FROM dept;

SELECT * FROM SALGRADE;

SELECT ename,dname
FROM emp e
RIGHT JOIN dept d
ON e.deptno = d.deptno;
 

#부서번호가 30번인 사원들의 이름, 직급, 부서번호, 부서위치를 조회하시오.
SELECT ename,job,d.deptno,loc
FROM emp e
INNER JOIN dept d
ON e.deptno = d.deptno
WHERE d.deptno = 30;

SELECT ename, job, deptno, (SELECT loc FROM dept WHERE deptno = e.deptno) loc
FROM emp e
WHERE e.deptno = 30;

#커미션을 받는 사원의 이름, 커미션, 부서이름,부서위치를 조회하시오.

SELECT * FROM emp;

SELECT ename, comm, dname, loc
FROM emp e
INNER JOIN dept d
ON comm > 100;


#DALLAS에서 근무하는 사원의 이름,직급,부서번호,부서명을 조회하시오.

SELECT * FROM dept;

SELECT ename, job, d.deptno, dname
FROM emp e
INNER JOIN dept d
ON e.deptno = d.deptno
WHERE d.loc = 'DALLAS';

#이름에 A 가 들어가는 사원의 이름,부서명을 조회하시오.

SELECT ename,dname
FROM emp e
INNER JOIN dept d
ON ename LIKE '%a%';


#이름, 직급, 월급여, 월급여등급을 조회하시오.

SELECT * FROM emp;

SELECT * FROM SALGRADE;

SELECT ename, job, sal, grade
FROM emp e
INNER JOIN salgrade s;

#ALLEN과 같은 부서에 근무하는 사원의 이름, 부서번호를 조회하시오.

SELECT *
FROM emp e
INNER JOIN dept d
ON e.deptno = d.deptno
WHERE d.deptno = (SELECT deptno FROM emp WHERE ename = 'ALLEN');

#서브 쿼리는 SELECT 문 안에서 ()로 둘러싸인 SELECT 문을 말하며 쿼리문의 결과를 메인 쿼리로 전달하기 위해 사용된다.
#사원명 'JONES'가 속한 부서명을 조회하시오.
#부서번호를 알아내기 위한 쿼리가 서브 쿼리로 사용되고, 이 서브쿼리는 단 하나의 결과값을 얻기 때문에 단일 행 서브 쿼리라 한다.

#10번 부서에서 근무하는 사원의 이름과 10번 부서의 부서명을 조회하시오.

SELECT ename, dname
FROM emp e
INNER JOIN dept d
ON e.deptno = d.deptno
WHERE e.deptno = 10;

#평균 월급여보다 더 많은 월급여를 받은 사원의 사원번호,이름,월급여 조회하시오.

SELECT empno, ename, sal
FROM emp e
WHERE sal > (SELECT AVG(sal) FROM emp);


SELECT AVG(sal) FROM emp;


#부서번호가 10인 사원중에서 최대급여를 받는 사원과 동일한 급여를 받는 사원의 사원번호, 이름을 조회하시오.

SELECT sal FROM emp WHERE deptno = 10 ORDER BY sal DESC LIMIT 1;

SELECT MAX(sal) FROM emp WHERE deptno = 10;


#테이블명 다음에 나오는 컬럼 리스트가 구조에 맞게 순서대로 모두 선택되야 하는 경우는 생략 가능하다.
#NUMBER 형의 컬럼 값에는 ''를 생략할 수 있다.

#--EMP 테이블에 새로운 사원 정보 추가(임꺽정)
#사원번호는 기본키로 설정되어 있다.
#따라서 사원번호가 같은 사원은 테이블에 존재할 수 없다.

#--EMP 테이블에 새로운 사원 정보 추가(장길산)

#컬럼리스트에 COMM 이 빠졌고 VALUES 에도 해당 컬럼에 대한 값이 없다.
#이러면 COMM 컬럼값은 NULL이 된다.
#위 인서튼 문은 컬럼에 NULL을 입력하는 방법 중 하나를 보여준다.

#사원테이블에서 임꺽정의 월급여를 2800 으로 변경
#사원테이블에서 홍길동의 월급여를 300 만큼 인상하고 COMM은 500으로 변경
#사원테이블에서 홍길동,임꺽정,장길산을 삭제
